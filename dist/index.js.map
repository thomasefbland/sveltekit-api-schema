{"version":3,"file":"index.js","sources":["../src/core/HTTP_CODES.js","../src/core/api_fetch.js","../src/core/respond.js"],"sourcesContent":["export const OK = 200;\nexport const CREATED = 201;\nexport const NO_CONTENT = 204;\n\nexport const SEE_OTHER = 303;\n\nexport const BAD_REQUEST = 400;\nexport const UNAUTHORIZED = 401;\nexport const FORBIDDEN = 403;\nexport const NOT_FOUND = 404;\n\nexport const SERVER_ERROR = 500;\n","/**\n * @typedef {Object} UnwrappedSuccessfulResponse\n * @property {true} ok\n * @property {Record<string, any>} json\n */\n\n/**\n * @typedef {Object} UnwrappedFailedResponse\n * @property {false} ok\n * @property {{ message: string }} json\n */\n\n/**\n * @typedef {UnwrappedSuccessfulResponse | UnwrappedFailedResponse} UnwrappedResponse\n */\n\n/**\n * @callback SvelteFetch\n * @param {RequestInfo | URL | string | globalThis.Request} input\n * @param {RequestInit} [init]\n * @returns {Promise<Response>}\n */\n\n/**\n * @typedef {'GET' | 'POST' | 'PUT' | 'DELETE' | 'PATCH'} Method\n */\n\n// FIXME: This interface is pretty bad probably now that I think about itx\n/**\n * @template {Record<string, any>} Data\n * @param {string} route\n * @param {Method} method\n * @param {Record<string, any> | SvelteFetch} [payload_or_svelte_fetch]\n * @param {SvelteFetch} [svelte_fetch]\n * @returns {Promise<UnwrappedResponse & { json: Data }>}\n */\nexport async function api_fetch(route, method, payload_or_svelte_fetch, svelte_fetch) {\n\tconst _fetch = svelte_fetch ?? (typeof payload_or_svelte_fetch !== \"function\" ? fetch : payload_or_svelte_fetch);\n\n\tconst payload = typeof payload_or_svelte_fetch === \"object\" && !Array.isArray(payload_or_svelte_fetch) ? payload_or_svelte_fetch : undefined;\n\n\treturn new Promise((resolve) => {\n\t\t_fetch(route, {\n\t\t\tmethod: method,\n\t\t\tbody: payload ? JSON.stringify(payload) : undefined,\n\t\t}).then((/** @type {Response} */ response) => response.json().then((json) => resolve({ ok: response.ok, json })));\n\t});\n}\n","import { NO_CONTENT } from \"./HTTP_CODES.js\";\n\n/**\n * @type {Record<import(\"types\").ApiHttpCode, string>}\n */\nconst DEFAULT_MESSAGES = {\n\t200: \"OK\",\n\t201: \"Created\",\n\t204: \"No Content\",\n\t400: \"Bad Request\",\n\t401: \"Unauthorized\",\n\t403: \"Forbidden\",\n\t404: \"Not Found\",\n\t500: \"Internal Server Error\",\n};\n\n/**\n * @typedef {Record<string, any>} Dict\n */\n\n/**\n * @typedef {Response & {\n *   ok: true,\n *   json: () => Promise<Dict>\n * }} SuccessfulAPIResponse\n */\n\n/**\n * @typedef {Response & {\n *   ok: false\n * }} FailedAPIResponse\n */\n\n/**\n * @typedef {SuccessfulAPIResponse | FailedAPIResponse} APIResponseWithoutData\n */\n\n/**\n * @template T\n * @typedef {SuccessfulAPIResponse & { json(): Promise<T> } | FailedAPIResponse} APIResponseWithData\n */\n\n/**\n * Respond with just a status code.\n * @param {import(\"types\").ApiHttpCode} status_code\n * @returns {Promise<APIResponseWithoutData>}\n */\n\n/**\n * Respond with a status code and message.\n * @param {import(\"types\").ApiHttpCode} status_code\n * @param {string} message_or_data\n * @returns {Promise<APIResponseWithoutData>}\n */\n\n/**\n * @template {Dict} Data\n * Respond with status code, message, and data.\n * @param {import(\"types\").ApiHttpCode} status_code\n * @param {string} message_or_data\n * @param {Data} data\n * @returns {Promise<APIResponseWithData<{ message: string; data: Data }>>}\n */\n\n/**\n * @template {Dict} Data\n * Respond with status code and data (auto-message).\n * @param {import('types').ApiHttpCode} status_code\n * @param {Data} message_or_data\n * @returns {Promise<APIResponseWithData<{ message: string; data: Data }>>}\n */\n\n/**\n * @template {Dict} Data\n * @param {import(\"types\").ApiHttpCode} status_code\n * @param {string | Data} [message_or_data]\n * @param {Data} [data]\n * @returns {Promise<APIResponseWithData<any> | APIResponseWithoutData>}\n */\nexport async function respond(status_code, message_or_data, data) {\n\tif (status_code === NO_CONTENT) return new Response(null, { status: NO_CONTENT });\n\n\tif (message_or_data !== undefined) {\n\t\tif (typeof message_or_data === \"string\") {\n\t\t\tif (data) {\n\t\t\t\treturn build_response(status_code, message_or_data, data);\n\t\t\t} else {\n\t\t\t\treturn build_response(status_code, message_or_data);\n\t\t\t}\n\t\t} else {\n\t\t\treturn build_response(status_code, DEFAULT_MESSAGES[status_code], message_or_data);\n\t\t}\n\t} else {\n\t\treturn build_response(status_code, DEFAULT_MESSAGES[status_code]);\n\t}\n}\n\n/**\n *\n * @template {Dict} Data\n * @param {import(\"types\").ApiHttpCode} status_code\n * @param {string} message\n * @param {Data} [data]\n * @returns {Response}\n */\nfunction build_response(status_code, message, data) {\n\tconst body = { message: message };\n\t// @ts-ignore\n\tif (data) body[\"data\"] = data;\n\n\treturn new Response(JSON.stringify(body), { status: status_code, headers: { \"Content-Type\": \"application/json\" } });\n}\n"],"names":[],"mappings":"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"}